// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailtemplate.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class Email
{
	private final IMendixObject emailMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "EmailTemplate.Email";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		To("To"),
		From("From"),
		CC("CC"),
		BCC("BCC"),
		Subject("Subject"),
		Date("Date"),
		UseOnlyPlainText("UseOnlyPlainText"),
		HtmlBody("HtmlBody"),
		PlainBody("PlainBody"),
		Queued("Queued"),
		Attempts("Attempts"),
		DateSent("DateSent"),
		LastError("LastError"),
		LastAttempt("LastAttempt"),
		Status("Status"),
		Email_EmailTemplate("EmailTemplate.Email_EmailTemplate");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public Email(IContext context)
	{
		this(context, Core.instantiate(context, "EmailTemplate.Email"));
	}

	protected Email(IContext context, IMendixObject emailMendixObject)
	{
		if (emailMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("EmailTemplate.Email", emailMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a EmailTemplate.Email");

		this.emailMendixObject = emailMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Email.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emailtemplate.proxies.Email initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return emailtemplate.proxies.Email.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static emailtemplate.proxies.Email initialize(IContext context, IMendixObject mendixObject)
	{
		return new emailtemplate.proxies.Email(context, mendixObject);
	}

	public static emailtemplate.proxies.Email load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return emailtemplate.proxies.Email.initialize(context, mendixObject);
	}

	public static java.util.List<emailtemplate.proxies.Email> load(IContext context, String xpathConstraint) throws CoreException
	{
		java.util.List<emailtemplate.proxies.Email> result = new java.util.ArrayList<emailtemplate.proxies.Email>();
		for (IMendixObject obj : Core.retrieveXPathQuery(context, "//EmailTemplate.Email" + xpathConstraint))
			result.add(emailtemplate.proxies.Email.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of To
	 */
	public final String getTo()
	{
		return getTo(getContext());
	}

	/**
	 * @param context
	 * @return value of To
	 */
	public final String getTo(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.To.toString());
	}

	/**
	 * Set value of To
	 * @param to
	 */
	public final void setTo(String to)
	{
		setTo(getContext(), to);
	}

	/**
	 * Set value of To
	 * @param context
	 * @param to
	 */
	public final void setTo(IContext context, String to)
	{
		getMendixObject().setValue(context, MemberNames.To.toString(), to);
	}

	/**
	 * @return value of From
	 */
	public final String getFrom()
	{
		return getFrom(getContext());
	}

	/**
	 * @param context
	 * @return value of From
	 */
	public final String getFrom(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.From.toString());
	}

	/**
	 * Set value of From
	 * @param from
	 */
	public final void setFrom(String from)
	{
		setFrom(getContext(), from);
	}

	/**
	 * Set value of From
	 * @param context
	 * @param from
	 */
	public final void setFrom(IContext context, String from)
	{
		getMendixObject().setValue(context, MemberNames.From.toString(), from);
	}

	/**
	 * @return value of CC
	 */
	public final String getCC()
	{
		return getCC(getContext());
	}

	/**
	 * @param context
	 * @return value of CC
	 */
	public final String getCC(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.CC.toString());
	}

	/**
	 * Set value of CC
	 * @param cc
	 */
	public final void setCC(String cc)
	{
		setCC(getContext(), cc);
	}

	/**
	 * Set value of CC
	 * @param context
	 * @param cc
	 */
	public final void setCC(IContext context, String cc)
	{
		getMendixObject().setValue(context, MemberNames.CC.toString(), cc);
	}

	/**
	 * @return value of BCC
	 */
	public final String getBCC()
	{
		return getBCC(getContext());
	}

	/**
	 * @param context
	 * @return value of BCC
	 */
	public final String getBCC(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.BCC.toString());
	}

	/**
	 * Set value of BCC
	 * @param bcc
	 */
	public final void setBCC(String bcc)
	{
		setBCC(getContext(), bcc);
	}

	/**
	 * Set value of BCC
	 * @param context
	 * @param bcc
	 */
	public final void setBCC(IContext context, String bcc)
	{
		getMendixObject().setValue(context, MemberNames.BCC.toString(), bcc);
	}

	/**
	 * @return value of Subject
	 */
	public final String getSubject()
	{
		return getSubject(getContext());
	}

	/**
	 * @param context
	 * @return value of Subject
	 */
	public final String getSubject(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Subject.toString());
	}

	/**
	 * Set value of Subject
	 * @param subject
	 */
	public final void setSubject(String subject)
	{
		setSubject(getContext(), subject);
	}

	/**
	 * Set value of Subject
	 * @param context
	 * @param subject
	 */
	public final void setSubject(IContext context, String subject)
	{
		getMendixObject().setValue(context, MemberNames.Subject.toString(), subject);
	}

	/**
	 * @return value of Date
	 */
	public final java.util.Date getDate()
	{
		return getDate(getContext());
	}

	/**
	 * @param context
	 * @return value of Date
	 */
	public final java.util.Date getDate(IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Date.toString());
	}

	/**
	 * Set value of Date
	 * @param date
	 */
	public final void setDate(java.util.Date date)
	{
		setDate(getContext(), date);
	}

	/**
	 * Set value of Date
	 * @param context
	 * @param date
	 */
	public final void setDate(IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.Date.toString(), date);
	}

	/**
	 * @return value of UseOnlyPlainText
	 */
	public final Boolean getUseOnlyPlainText()
	{
		return getUseOnlyPlainText(getContext());
	}

	/**
	 * @param context
	 * @return value of UseOnlyPlainText
	 */
	public final Boolean getUseOnlyPlainText(IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.UseOnlyPlainText.toString());
	}

	/**
	 * Set value of UseOnlyPlainText
	 * @param useonlyplaintext
	 */
	public final void setUseOnlyPlainText(Boolean useonlyplaintext)
	{
		setUseOnlyPlainText(getContext(), useonlyplaintext);
	}

	/**
	 * Set value of UseOnlyPlainText
	 * @param context
	 * @param useonlyplaintext
	 */
	public final void setUseOnlyPlainText(IContext context, Boolean useonlyplaintext)
	{
		getMendixObject().setValue(context, MemberNames.UseOnlyPlainText.toString(), useonlyplaintext);
	}

	/**
	 * @return value of HtmlBody
	 */
	public final String getHtmlBody()
	{
		return getHtmlBody(getContext());
	}

	/**
	 * @param context
	 * @return value of HtmlBody
	 */
	public final String getHtmlBody(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.HtmlBody.toString());
	}

	/**
	 * Set value of HtmlBody
	 * @param htmlbody
	 */
	public final void setHtmlBody(String htmlbody)
	{
		setHtmlBody(getContext(), htmlbody);
	}

	/**
	 * Set value of HtmlBody
	 * @param context
	 * @param htmlbody
	 */
	public final void setHtmlBody(IContext context, String htmlbody)
	{
		getMendixObject().setValue(context, MemberNames.HtmlBody.toString(), htmlbody);
	}

	/**
	 * @return value of PlainBody
	 */
	public final String getPlainBody()
	{
		return getPlainBody(getContext());
	}

	/**
	 * @param context
	 * @return value of PlainBody
	 */
	public final String getPlainBody(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.PlainBody.toString());
	}

	/**
	 * Set value of PlainBody
	 * @param plainbody
	 */
	public final void setPlainBody(String plainbody)
	{
		setPlainBody(getContext(), plainbody);
	}

	/**
	 * Set value of PlainBody
	 * @param context
	 * @param plainbody
	 */
	public final void setPlainBody(IContext context, String plainbody)
	{
		getMendixObject().setValue(context, MemberNames.PlainBody.toString(), plainbody);
	}

	/**
	 * @return value of Queued
	 */
	public final Boolean getQueued()
	{
		return getQueued(getContext());
	}

	/**
	 * @param context
	 * @return value of Queued
	 */
	public final Boolean getQueued(IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.Queued.toString());
	}

	/**
	 * Set value of Queued
	 * @param queued
	 */
	public final void setQueued(Boolean queued)
	{
		setQueued(getContext(), queued);
	}

	/**
	 * Set value of Queued
	 * @param context
	 * @param queued
	 */
	public final void setQueued(IContext context, Boolean queued)
	{
		getMendixObject().setValue(context, MemberNames.Queued.toString(), queued);
	}

	/**
	 * @return value of Attempts
	 */
	public final Integer getAttempts()
	{
		return getAttempts(getContext());
	}

	/**
	 * @param context
	 * @return value of Attempts
	 */
	public final Integer getAttempts(IContext context)
	{
		return (Integer) getMendixObject().getValue(context, MemberNames.Attempts.toString());
	}

	/**
	 * Set value of Attempts
	 * @param attempts
	 */
	public final void setAttempts(Integer attempts)
	{
		setAttempts(getContext(), attempts);
	}

	/**
	 * Set value of Attempts
	 * @param context
	 * @param attempts
	 */
	public final void setAttempts(IContext context, Integer attempts)
	{
		getMendixObject().setValue(context, MemberNames.Attempts.toString(), attempts);
	}

	/**
	 * @return value of DateSent
	 */
	public final java.util.Date getDateSent()
	{
		return getDateSent(getContext());
	}

	/**
	 * @param context
	 * @return value of DateSent
	 */
	public final java.util.Date getDateSent(IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateSent.toString());
	}

	/**
	 * Set value of DateSent
	 * @param datesent
	 */
	public final void setDateSent(java.util.Date datesent)
	{
		setDateSent(getContext(), datesent);
	}

	/**
	 * Set value of DateSent
	 * @param context
	 * @param datesent
	 */
	public final void setDateSent(IContext context, java.util.Date datesent)
	{
		getMendixObject().setValue(context, MemberNames.DateSent.toString(), datesent);
	}

	/**
	 * @return value of LastError
	 */
	public final String getLastError()
	{
		return getLastError(getContext());
	}

	/**
	 * @param context
	 * @return value of LastError
	 */
	public final String getLastError(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.LastError.toString());
	}

	/**
	 * Set value of LastError
	 * @param lasterror
	 */
	public final void setLastError(String lasterror)
	{
		setLastError(getContext(), lasterror);
	}

	/**
	 * Set value of LastError
	 * @param context
	 * @param lasterror
	 */
	public final void setLastError(IContext context, String lasterror)
	{
		getMendixObject().setValue(context, MemberNames.LastError.toString(), lasterror);
	}

	/**
	 * @return value of LastAttempt
	 */
	public final java.util.Date getLastAttempt()
	{
		return getLastAttempt(getContext());
	}

	/**
	 * @param context
	 * @return value of LastAttempt
	 */
	public final java.util.Date getLastAttempt(IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.LastAttempt.toString());
	}

	/**
	 * Set value of LastAttempt
	 * @param lastattempt
	 */
	public final void setLastAttempt(java.util.Date lastattempt)
	{
		setLastAttempt(getContext(), lastattempt);
	}

	/**
	 * Set value of LastAttempt
	 * @param context
	 * @param lastattempt
	 */
	public final void setLastAttempt(IContext context, java.util.Date lastattempt)
	{
		getMendixObject().setValue(context, MemberNames.LastAttempt.toString(), lastattempt);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final emailtemplate.proxies.Status getStatus()
	{
		return getStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Status
	 */
	public final emailtemplate.proxies.Status getStatus(IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Status.toString());
		if (obj == null)
			return null;

		return emailtemplate.proxies.Status.valueOf((String) obj);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final void setStatus(emailtemplate.proxies.Status status)
	{
		setStatus(getContext(), status);
	}

	/**
	 * Set value of Status
	 * @param context
	 * @param status
	 */
	public final void setStatus(IContext context, emailtemplate.proxies.Status status)
	{
		if (status != null)
			getMendixObject().setValue(context, MemberNames.Status.toString(), status.toString());
		else
			getMendixObject().setValue(context, MemberNames.Status.toString(), null);
	}

	/**
	 * @return value of Email_EmailTemplate
	 */
	public final emailtemplate.proxies.EmailTemplate getEmail_EmailTemplate() throws CoreException
	{
		return getEmail_EmailTemplate(getContext());
	}

	/**
	 * @param context
	 * @return value of Email_EmailTemplate
	 */
	public final emailtemplate.proxies.EmailTemplate getEmail_EmailTemplate(IContext context) throws CoreException
	{
		emailtemplate.proxies.EmailTemplate result = null;
		IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Email_EmailTemplate.toString());
		if (identifier != null)
			result = emailtemplate.proxies.EmailTemplate.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Email_EmailTemplate
	 * @param email_emailtemplate
	 */
	public final void setEmail_EmailTemplate(emailtemplate.proxies.EmailTemplate email_emailtemplate)
	{
		setEmail_EmailTemplate(getContext(), email_emailtemplate);
	}

	/**
	 * Set value of Email_EmailTemplate
	 * @param context
	 * @param email_emailtemplate
	 */
	public final void setEmail_EmailTemplate(IContext context, emailtemplate.proxies.EmailTemplate email_emailtemplate)
	{
		if (email_emailtemplate == null)
			getMendixObject().setValue(context, MemberNames.Email_EmailTemplate.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Email_EmailTemplate.toString(), email_emailtemplate.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return emailMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emailtemplate.proxies.Email that = (emailtemplate.proxies.Email) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "EmailTemplate.Email";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
